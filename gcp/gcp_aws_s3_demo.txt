Amazon simple storage service S3 is an object storage service that offers industry-leading scalability data availability security and performance in this demo. We're going to learn how to create and configure our first Amazon S3 bucket how to upload view copy and delete objects and finally how to delete our example bucket when we're through with it to get started. Let's open up the AWS Management console visit the S3 dashboard and click create bucket. Let's call this one getting started with S3 demo. S3 bucket names must be globally unique. So a very short generic name like demo would be rejected as already being in use.There are a few other rules about how S3 buckets can be named and you can visit the link in the Forum to learn more. When selecting a region for an S3 bucket, we generally want to choose the region closest to where our clients will be accessing at our located clients can include human users servers like Amazon ec2 instances or even other AWS managed services. We'll just use the default Us East North Virginia selection for this demo. Next there's a section for Block Public Access by default Amazon S3 will block all public access to our

newly created S3 bucket and the objects we upload to it and it will prevent us from accidentally granting access to them later via Access Control lists or S3 bucket policies.We strongly recommend that customers leave the block all public access setting turned on. Enabling Public Access in an S3 bucket should only be done as a last resort for use cases where it's absolutely necessary instead. We recommend using S3 bucket policies or S3 access points to Grant limited access to S3 buckets and the individual objects Within you can learn more about those by visiting the links provided in the video description. Finally under advanced settings. We have the object lock option which prevents uploaded objects from ever being deleted. We can enable this if needed to comply with any regulatory requirements that we might have.To keep things simple for our getting started demo. Let's leave this option disabled and click create bucket. Okay, our bucket was successfully created. Let's click on the name and take a look inside. Amazon S3 is a powerful feature-rich service with a wide variety of different settings. You can configure for a number of use cases including things like object versioning encryption lifecycle policies inventory reports and access points. When you've got the basics down, we encourage you to explore the documentation Linked In the video description to learn more about these capabilities for now though. Let's upload some files to our new bucket.We're going to upload these Amazon S3 and AWS logos. If we needed to upload a lot of small files or a very large file we could also use the AWS command line interface or AWS software development kit to do so. Next we're given the option to set permissions on our uploaded objects. With the default settings any AWS user or role within this account will be able to access these files as long as they're AWS identity and access management policy allows it. That's enough for this demo, but we could also use this to Grant the same type of access to other specific AWS accounts if we wanted to.There's a section for managing public permissions too. But since we left block all public access checked when creating this bucket earlier were not allowed to change these settings now. And finally, we can choose to configure some other properties like the object storage class or enabling encryption at rest. Amazon S3 offers a range of storage classes designed for different use cases for analytics to archiving with different access patterns and costs. But for this demo, we'll go with the standard storage class and move on. After clicking upload, we can click on one of our files to see more details.The object URL link that we see here at the bottom is in fact the correct Amazon S3 URL for this uploaded object. But since we've disabled public access to our bucket, we're not allowed to use it. In this case the weight of view and uploaded object would be through the open download or download as buttons which automatically generate a temporary signed URL that grants us access to an object for five minutes before expiring. Since the file doesn't have Public Access enabled this is the only way for us to access it using our browser. Let's head back to the object listing and pretend that we didn't actually mean to upload these files at the root level of our bucket and we instead want to group them somehow.Amazon S3 uses a flat structure to organize objects rather than a folder hierarchy like we're used to seeing in a file system. It does let us use naming prefixes though to simulate the concept of folders and help us keep things organized. Let's create a folder called logos. And then move our two files there. We can then organize our bucket further by creating additional folders if we wanted to or if we change our minds we could simply use the delete action on a folder or object to remove it.Before concluding this demo. Let's return to the main S3 bucket listing and delete the example bucket. We created. Since the bucket isn't empty S3 won't let us delete it without first using empty bucket to delete all of the objects in it. We enter the full name of the bucket to confirm then click the empty button. Now we can click exit and try to delete the bucket again, which the console will let us do after confirming and clicking delete bucket. To learn more about Amazon S3, including how to manage access secure your data and optimize costs using storage classes and lifecycle policies. Please visit the links in the video description below. Thanks for watching.